(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const c of i.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&n(c)}).observe(document,{childList:!0,subtree:!0});function e(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function n(s){if(s.ep)return;s.ep=!0;const i=e(s);fetch(s.href,i)}})();class d{static get white(){return 4294967295}static get black(){return 4278190080}static get red(){return 4278190335}static get blue(){return 4294901760}static get green(){return 4278255360}static get yellow(){return 4278255615}}class l{constructor(t,e){this.pixels=new Uint32Array(t*e),this.width=t,this.height=e}fill(t){let e=0,n=0,s=0;const i=this.width,c=this.width*this.height;for(e=0;e<c;e++)this.pixels[s+i*n]=t(s,n),s+1==i?(s=0,n++):s++}paintTo(t,e,n=0,s=0){const i=this.width*this.height;let c=0,o=0;for(let h=0;h<i;h++)t[Math.ceil(n+c)+Math.ceil(s+o)*e]=this.pixels[c+o*this.width],c+1==this.width?(c=0,o++):c++}}class p{constructor(t){const e=new ArrayBuffer(t);this.buf8=new Uint8ClampedArray(e),this.texture=new Uint32Array(e)}clear(t){this.texture.fill(t)}}class w{constructor(t){this.width=t.width,this.height=t.height,this.context2D=t.getContext("2d"),this.imageData=this.context2D.createImageData(this.width,this.height)}draw(t){this.imageData.data.set(t),this.context2D.putImageData(this.imageData,0,0)}imageSize(){return this.imageData.data.length}}class f{constructor(t){this.canvasRender=new w(t),this.renderTex=new p(this.canvasRender.imageSize())}get tex(){return this.renderTex.texture}get width(){return this.canvasRender.width}get height(){return this.canvasRender.height}draw(){this.canvasRender.draw(this.renderTex.buf8)}clear(t){this.renderTex.clear(t)}}class g{constructor(t){this.canvas=t,this.screenInput=null,this.rect=null}update(){this.rect=this.canvas.getBoundingClientRect()}register(t){this.screenInput=t,this.update(),this.canvas.onmousemove=e=>{this.screenInput.onMove(e.clientX-this.rect.left,e.clientY-this.rect.top)},this.canvas.onmouseup=e=>{this.screenInput.onActionUp(e.clientX-this.rect.left,e.clientY-this.rect.top)},this.canvas.onmousedown=e=>{this.screenInput.onActionDown(e.clientX-this.rect.left,e.clientY-this.rect.top)},this.canvas.oncontextmenu=function(e){e.preventDefault()}}}class x{constructor(){this.delta=0,this.lastStepTime=0}start(){this.delta=0,this.lastStepTime=Date.now()}step(){const t=Date.now();this.delta=t-this.lastStepTime,this.lastStepTime=t}deltaSeconds(){return this.delta/1e3}}class m{constructor(t,e){this.renderer=t,this.playerInput=e,this.scene=null,this.timer=new x}loadScene(t){this.timer.start(),this.scene=t}tick(){this.timer.step(),this.scene&&this.scene.draw(this.renderer,this.timer.deltaSeconds()),this.renderer.draw()}}function y(r,t,e){return new Float32Array([r,t,e])}function u(){return y(0,0,0)}class F{constructor(){this.player=null,this.position=u()}setPlayer(t){this.player=t}onMove(t,e){this.player&&(vector3SetXY(this.position,t,e),this.player.moveTo(this.position))}onActionDown(t,e){console.log("down",t,e)}onActionUp(t,e){console.log("up",t,e)}}class v{constructor(t,e){this.screenInput=new g(e),this.playerInput=new F,this.screenInput.register(this.playerInput),t.onresize=()=>{this.screenInput.update()}}}class I{constructor(t){this.position=t||u()}}class D{constructor(){this.id=0,this.entities=new Set,this.tex=new l(320,320),this.texCenter={x:this.tex.width/2,y:this.tex.height/2},this.tex.fill(()=>parseInt(4294919173)),this.tex2=new l(120,120),this.texCenter2={x:this.tex.width/2,y:this.tex.height/2},this.tex2.fill(()=>d.yellow)}draw(t,e){const n=t.width;this.tex.paintTo(t.tex,n,this.texCenter.x,this.texCenter.y),this.tex2.paintTo(t.tex,n,this.texCenter2.x,this.texCenter2.y)}addEntity(t){return t instanceof I?(this.entities.add(t),t):null}}class a{constructor(t,e,n=60){this.drawPeriod=a.calculateDrawPeriod(n),this.renderer=new f(e),this.input=new v(t,e),this.game=new m(this.renderer,this.input.playerInput),this.scene=new D,this.game.loadScene(this.scene)}run(){setInterval(()=>{this.game.tick()},this.drawPeriod)}static calculateDrawPeriod(t){return Math.ceil(1/t*1e3)}}const S=document.getElementById("canvas"),T=new a(window,S);T.run();
